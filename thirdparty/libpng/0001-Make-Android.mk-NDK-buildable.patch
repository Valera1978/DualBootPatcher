From be8a2e396e9014a070c5c6089313204a1361d186 Mon Sep 17 00:00:00 2001
From: Andrew Gunnerson <chenxiaolong@cxl.epac.to>
Date: Sun, 26 Mar 2017 15:36:37 -0400
Subject: [PATCH] Make Android.mk NDK-buildable

Signed-off-by: Andrew Gunnerson <chenxiaolong@cxl.epac.to>
---
 Android.mk | 106 +++++++++----------------------------------------------------
 1 file changed, 15 insertions(+), 91 deletions(-)

diff --git a/Android.mk b/Android.mk
index c2e21ca..923145e 100644
--- a/Android.mk
+++ b/Android.mk
@@ -1,8 +1,5 @@
 LOCAL_PATH:= $(call my-dir)
 
-# We need to build this for both the device (as a shared library)
-# and the host (as a static library for tools to use).
-
 common_SRC_FILES := \
     png.c \
     pngerror.c \
@@ -20,7 +17,7 @@ common_SRC_FILES := \
     pngwtran.c \
     pngwutil.c \
 
-ifeq ($(ARCH_ARM_HAVE_NEON),true)
+ifeq ($(TARGET_ARCH_ABI),armeabi-v7a)
 my_cflags_arm := -DPNG_ARM_NEON_OPT=2
 endif
 
@@ -39,100 +36,27 @@ my_src_files_intel := \
 
 common_CFLAGS := -std=gnu89 -Wno-unused-parameter #-fvisibility=hidden ## -fomit-frame-pointer
 
-# For the host
-# =====================================================
-
-include $(CLEAR_VARS)
-LOCAL_SRC_FILES := $(common_SRC_FILES)
-LOCAL_SRC_FILES_x86 += $(my_src_files_intel)
-LOCAL_SRC_FILES_x86_64 += $(my_src_files_intel)
-LOCAL_CFLAGS += $(common_CFLAGS)
-
-# Disable optimizations because they crash on windows
-# LOCAL_CFLAGS_x86 += $(my_cflags_intel)
-# LOCAL_CFLAGS_x86_64 += $(my_cflags_intel)
-
-LOCAL_ASFLAGS += $(common_ASFLAGS)
-LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
-LOCAL_STATIC_LIBRARIES := libz
-LOCAL_MODULE:= libpng
-LOCAL_MODULE_HOST_OS := darwin linux windows
-include $(BUILD_HOST_STATIC_LIBRARY)
-
-
-# For the device (static) for NDK
-# =====================================================
-
-include $(CLEAR_VARS)
-LOCAL_CLANG := true
-LOCAL_SRC_FILES := $(common_SRC_FILES)
-LOCAL_SRC_FILES_arm := $(my_src_files_arm)
-LOCAL_SRC_FILES_arm64 := $(my_src_files_arm)
-LOCAL_SRC_FILES_x86 += $(my_src_files_intel)
-LOCAL_SRC_FILES_x86_64 += $(my_src_files_intel)
-LOCAL_CFLAGS += $(common_CFLAGS) -ftrapv
-LOCAL_CFLAGS_arm := $(my_cflags_arm)
-LOCAL_CFLAGS_arm64 := $(my_cflags_arm64)
-LOCAL_CFLAGS_x86 += $(my_cflags_intel)
-LOCAL_CFLAGS_x86_64 += $(my_cflags_intel)
-LOCAL_ASFLAGS += $(common_ASFLAGS)
-LOCAL_SANITIZE := never
-LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
-LOCAL_SHARED_LIBRARIES := libz
-LOCAL_MODULE:= libpng_ndk
-LOCAL_SDK_VERSION := 14
-include $(BUILD_STATIC_LIBRARY)
-
-# For the device (static) for platform (retains fortify support)
+# For the device (static)
 # =====================================================
 
 include $(CLEAR_VARS)
 LOCAL_CLANG := true
 LOCAL_SRC_FILES := $(common_SRC_FILES)
-LOCAL_SRC_FILES_arm := $(my_src_files_arm)
-LOCAL_SRC_FILES_arm64 := $(my_src_files_arm)
-LOCAL_SRC_FILES_x86 += $(my_src_files_intel)
-LOCAL_SRC_FILES_x86_64 += $(my_src_files_intel)
 LOCAL_CFLAGS += $(common_CFLAGS) -ftrapv
-LOCAL_CFLAGS_arm := $(my_cflags_arm)
-LOCAL_CFLAGS_arm64 := $(my_cflags_arm64)
-LOCAL_CFLAGS_x86 += $(my_cflags_intel)
-LOCAL_CFLAGS_x86_64 += $(my_cflags_intel)
+ifeq ($(TARGET_ARCH_ABI),armeabi-v7a)
+	LOCAL_SRC_FILES += $(my_src_files_arm)
+	LOCAL_CFLAGS += $(my_cflags_arm)
+else ifeq ($(TARGET_ARCH_ABI),arm64-v8a)
+	LOCAL_SRC_FILES += $(my_src_files_arm)
+	LOCAL_CFLAGS += $(my_cflags_arm64)
+else ifeq ($(TARGET_ARCH_ABI),x86)
+	LOCAL_SRC_FILES += $(my_src_files_intel)
+	LOCAL_CFLAGS += $(my_cflags_intel)
+else ifeq ($(TARGET_ARCH_ABI),x86_64)
+	LOCAL_SRC_FILES += $(my_src_files_intel)
+	LOCAL_CFLAGS += $(my_cflags_intel)
+endif
 LOCAL_ASFLAGS += $(common_ASFLAGS)
-LOCAL_SANITIZE := never
 LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
-LOCAL_SHARED_LIBRARIES := libz
 LOCAL_MODULE:= libpng
 include $(BUILD_STATIC_LIBRARY)
-
-# For the device (shared)
-# =====================================================
-
-include $(CLEAR_VARS)
-LOCAL_CLANG := true
-LOCAL_SRC_FILES := $(common_SRC_FILES)
-LOCAL_SRC_FILES_arm := $(my_src_files_arm)
-LOCAL_SRC_FILES_arm64 := $(my_src_files_arm)
-LOCAL_SRC_FILES_x86 += $(my_src_files_intel)
-LOCAL_SRC_FILES_x86_64 += $(my_src_files_intel)
-LOCAL_CFLAGS += $(common_CFLAGS) -ftrapv
-LOCAL_CFLAGS_arm := $(my_cflags_arm)
-LOCAL_CFLAGS_arm64 := $(my_cflags_arm64)
-LOCAL_CFLAGS_x86 += $(my_cflags_intel)
-LOCAL_CFLAGS_x86_64 += $(my_cflags_intel)
-LOCAL_ASFLAGS += $(common_ASFLAGS)
-LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
-LOCAL_SHARED_LIBRARIES := libz
-LOCAL_MODULE:= libpng
-include $(BUILD_SHARED_LIBRARY)
-
-# For testing
-# =====================================================
-
-include $(CLEAR_VARS)
-LOCAL_CLANG := true
-LOCAL_SRC_FILES:= pngtest.c
-LOCAL_MODULE := pngtest
-LOCAL_SHARED_LIBRARIES:= libpng libz
-LOCAL_MODULE_TAGS := debug
-include $(BUILD_EXECUTABLE)
-- 
2.9.3

